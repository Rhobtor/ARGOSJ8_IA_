<!--
  Example launch file for octomap_server mapping:
  Listens to incoming PointCloud2 data and incrementally builds an octomap.
  The data is sent out in different representations.

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details
-->
<launch>
  <node pkg="octomap_server" exec="octomap_server_node" name="octomap_server" output="screen">
    <param name="resolution" value="0.05" />
    <param name="frame_id" value="map" />
    <param name="sensor_model.max_range" value="40.0" />
    <remap from="cloud_in" to="/ARGJ801/Velodyne/scan_cloud" />


    <param name="sensor_model.hit"       value="0.55" />
    <param name="sensor_model.miss"      value="0.49" />
    <param name="sensor_model.min"       value="0.05" />
    <param name="max_depth"              value="14"/>
    <param name="latch"                  value="false"/>
    <param name="filter_speckles"        value="true"/>
    <param name="sensor_model/integrate_free_space" value="true"/>
  </node>
</launch>

